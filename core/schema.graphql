###
# Subgraph Schema: ERC721 Smart Contracts and Tokens
# Version: 1.0.0

#############################
####### 721/1155 Token Metadata ######
#############################

type Token @entity {
  " { Contract Address }-{ Token ID }  "
  id: ID!

  " NFTContract for the token "
  nftContract: NFTContract!

  " ID of the token from the NFTContract "
  tokenId: BigInt!

  " URI of the token "
  tokenURI: String

  " The owner for the token "
  owners: [TokenBalance!]! @derivedFrom(field: "token")

  " Timestamp of the token's mint "
  mintTime: BigInt!
  
  " Describes the asset to which this token represents, defined in OpenSea metadata standards "
  description: String

  " URL which allows users to view the item on the colletion's site, defined in OpenSea metadata standards "
  externalURI: String

  " A URI pointing to a resource with mime type image, defined in OpenSea metadata standards "
  imageURI: String

  " Identifies the asset to which this token represents, defined in OpenSea metadata standards "
  name: String

  " Attributes for the token metadata, defined in OpenSea metadata standards "
  attributes: [Attribute!] @derivedFrom(field: "token")

  " Background color of the item, defined in OpenSea metadata standards "
  backgroundColor: String

  " A link to a multi-media attachment for the item, defined in OpenSea metadata standards "
  animationURI: String

  " A link to a YouTube video, defined in OpenSea metadata standards "
  youtubeURI: String

  " Block number when the subgraph gets the tokenURI and retrieves the detailed metadata information "
  blockNumber: BigInt!

  " Timestamp when the subgraph gets the tokenURI and retrieves the detailed metadata information "
  timestamp: BigInt!

  " Number of tokens minted"
  amount: BigInt! 
}


########################################
####### Token Attributes Metadata ######
########################################

type Attribute @entity {
  " { Contract ID }-{ Token ID }-{ Trait type } "
  id: ID!

  " The nftContract for the trait "
  nftContract: NFTContract!

  " ID of the token from the nftContract  "
  tokenId: BigInt!

  " Token metadata this attribute belongs to "
  token: Token!

  " Name of the trait, defined in OpenSea metadata standards "
  traitType: String!

  " Value of the trait, defined in OpenSea metadata standards "
  value: String

  " Maximum value for a numerical trait's possible values, defined in OpenSea metadata standards "
  maxValue: String

  " Indicates how the trait should be displayed, defined in OpenSea metadata standards "
  displayType: String
}

#########################################
####### ERC721 nftContract Metadata ######
#########################################

type NFTContract @entity {
  " ERC721/1155 nftContract address "
  id: ID!

  " Name of the nftContract "
  name: String

  " Symbol of the nftContract "
  symbol: String

  " Type of NFT contract"
  nftType: String!

  " Flag for whether ERC721 metadata is supported "
  supportsERC721Metadata: Boolean!

  " Flag for whether the tokenURI in the nftContract has been updated  "
  tokenURIUpdated: Boolean!

  " Total number of unique minted tokens in the nftContract "
  tokenCount: BigInt!

  " Total number of unique token owners holding tokens in the nftContract "
  ownerCount: BigInt!

  " Total number of token transfer events "
  transferCount: BigInt!

  test: Int

  " Tokens in the nftContract "
  tokens: [Token!]! @derivedFrom(field: "nftContract")

  " List of token transfers "
  transfers: [Transfer!]! @derivedFrom(field: "nftContract")

  " Token holder's balance "
  holdersBalance: [AccountBalance!]! @derivedFrom(field: "nftContract")

  ##### Snapshots #####

  # " Daily snapshot for this nftContract "
  # dailyNftContractSnapshot: [NFTContractDailySnapshot!]!
  #   @derivedFrom(field: "nftContract")
}

###############################################
####### ERC721/1155 NFTContract Timeseries ######
###############################################

# type NFTContractDailySnapshot @entity {
#   " { nftContract address }-{ # of days since Unix epoch time } "
#   id: ID!

#   " NFTContract this snapshot is associated with "
#   nftContract: NFTContract!

#   " Total number of unique tokens in the nftContract for the specific day "
#   tokenCount: BigInt!

#   " Total number of unique token owners in the collection for the specific day "
#   ownerCount: BigInt!

#   " Total number of transfers in a day "
#   dailyTransferCount: Int!

#   " Block number of this snapshot "
#   blockNumber: BigInt!

#   " Timestamp of this snapshot "
#   timestamp: BigInt!
# }

###############################
##### Transfer Event Data #####
###############################

type Transfer @entity {
  " { Contract ID }-{ Transaction hash }-{ Log index } "
  id: ID!

  " Transaction hash of the transaction that emitted this event "
  hash: String!

  " Event log index. For transactions that don't emit event, create arbitrary index starting from 0 "
  logIndex: Int!

  " The ERC721/1155 nftContract this event belongs to "
  nftContract: NFTContract!

  " Nonce of the transaction that emitted this event "
  nonce: Int!

  " ID of the token transferred "
  tokenId: BigInt!

  " Account that received the tokens "
  to: Account!

  " Account that sent the tokens "
  from: Account!

  " Operator which executed the transaction "
  operator: Account

  " Amount transfered "
  value: BigInt!

  " Block number of this event "
  blockNumber: BigInt!

  " Timestamp of this event "
  timestamp: BigInt!

  " Specifies if transfer is from a transferBatch "
  isBatch: Boolean!
}

##################################
######## Account MetaData ########
##################################

type TokenBalance @entity {
  " { Address Of the Account }-{ Address of the NFTContract }-{ TokenId } "
  id: ID!

  " Current balance of the account "
  balance: BigInt!

  " Token the balance relates to "
  token: Token!

  " Token the balance relates to "
  nftContract: NFTContract!

  " Current balance of the account "
  accountBalance: AccountBalance! 
}

# An account is a unique Ethereum address
type Account @entity {
  " Address of the account "
  id: ID!

  " Total number of unique tokens that this account holds "
  tokenCount: BigInt!

  " Token transfers to this account "
  transferTo: [Transfer!]! @derivedFrom(field: "to")

  " Token transfers from this account "
  transferFrom: [Transfer!]! @derivedFrom(field: "from")

  " Token balances that this account holds "
  balances: [AccountBalance!]! @derivedFrom(field: "account")

  # " Token balances snapshot that this account holds "
  # balancesSnapshot: [AccountBalanceDailySnapshot!]!
  #   @derivedFrom(field: "account")
}

type AccountBalance @entity {
  " { Address Of the Account }-{ Address of the NFTContract }"
  id: ID!

  " Account address "
  account: Account!

  " NFTContract address "
  nftContract: NFTContract!

  " Current token amount for the NFTContract "
  tokenCount: BigInt!

  " Block number in which the balance was last modified "
  blockNumber: BigInt!

  " Timestamp in which the balance was last modified "
  timestamp: BigInt!

  " Token balances that this account holds "
  tokenBalances: [TokenBalance!]! @derivedFrom(field: "accountBalance")
}

###############################
###### Account Timeseries #####
###############################

# type AccountBalanceDailySnapshot @entity {
#   " { Address Of the Account }-{ Address of the Contract }-{ # of days since Unix epoch time } "
#   id: ID!

#   " Account address "
#   account: Account!

#   " NFTContract address "
#   nftContract: NFTContract!

#   " Current token amount for the nft contract "
#   tokenCount: BigInt!

#   " Token balances that this account holds "
#   tokenBalances: [TokenBalance!]! @derivedFrom(field: "accountBalance")

#   " Block number in which the balance was last modified "
#   blockNumber: BigInt!

#   " Timestamp in which the balance was last modified "
#   timestamp: BigInt!
# }


# type TokenBalanceDailySnapshot @entity {
#   " { Address Of the Account }-{ Address of the Contract }-{ Token ID }-{ # of days since Unix epoch time } "
#   id: ID!

#   " Account address "
#   account: Account!

#   " NFTContract address "
#   nftContract: NFTContract!

#   token: Token

#   " Current token amount for the nft contract "
#   tokenCount: BigInt!

#   " Token balances that this account holds "
#   tokenBalances: [TokenBalance!]! @derivedFrom(field: "accountBalance")

#   " Block number in which the balance was last modified "
#   blockNumber: BigInt!

#   " Timestamp in which the balance was last modified "
#   timestamp: BigInt!
# }

#####################################
####### Non ERC721/1155 NFTContracts ######
#####################################

type NonNFTContract @entity {
  " Non ERC721/1155 Smart contract address "
  id: ID!
}
